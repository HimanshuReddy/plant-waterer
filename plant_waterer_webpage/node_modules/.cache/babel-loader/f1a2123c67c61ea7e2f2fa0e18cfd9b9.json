{"ast":null,"code":"var _jsxFileName = \"/Users/himanshureddy/Desktop/plant_waterer/src/App.js\";\nimport React from 'react';\nimport DataCard from './Components/DataCard';\nimport Button from '@material-ui/core/Button';\nconst serverAddress = '192.168.1.220:3000';\nconst styles = {};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // Accepts the type of data, which can only be 'temperature', 'humidity', or 'moisture' (the current\n  // api 'get' endpoints)\n\n\n  async getData(type) {\n    if (type === 'temperature' || type === 'humidity' || type === 'moisture') {\n      try {\n        let data = await fetch(serverAddress + '/' + type);\n        return data;\n      } catch {\n        return 'Error getting data';\n      }\n    } else {\n      throw 'Invalid request type';\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(DataCard, {\n      name: 'Temperature',\n      dataFetcher: () => this.getData('temperature'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/himanshureddy/Desktop/plant_waterer/src/App.js"],"names":["React","DataCard","Button","serverAddress","styles","App","Component","constructor","props","state","getData","type","data","fetch","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAIA,MAAMC,aAAa,GAAG,oBAAtB;AACA,MAAMC,MAAM,GAAG,EAAf;;AAIA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGD,GAN+B,CAQhC;AACA;;;AACA,QAAMC,OAAN,CAAcC,IAAd,EAAoB;AAClB,QAAIA,IAAI,KAAK,aAAT,IACAA,IAAI,KAAK,UADT,IAEAA,IAAI,KAAK,UAFb,EAEyB;AACvB,UAAI;AACF,YAAIC,IAAI,GAAG,MAAMC,KAAK,CAACV,aAAa,GAAG,GAAhB,GAAsBQ,IAAvB,CAAtB;AACA,eAAOC,IAAP;AACD,OAHD,CAGE,MAAM;AACN,eAAO,oBAAP;AACD;AACF,KATD,MASO;AACL,YAAM,sBAAN;AACD;AACF;;AAGDE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,aAAhB;AAA+B,MAAA,WAAW,EAAE,MAAM,KAAKJ,OAAL,CAAa,aAAb,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAhC+B;;AAoClC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport DataCard from './Components/DataCard';\nimport Button from '@material-ui/core/Button';\n\n\n\nconst serverAddress = '192.168.1.220:3000';\nconst styles = {\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n  \n  // Accepts the type of data, which can only be 'temperature', 'humidity', or 'moisture' (the current\n  // api 'get' endpoints)\n  async getData(type) {\n    if (type === 'temperature' ||\n        type === 'humidity' ||\n        type === 'moisture') {\n      try {\n        let data = await fetch(serverAddress + '/' + type);\n        return data;\n      } catch {\n        return 'Error getting data';\n      }\n    } else {\n      throw 'Invalid request type';\n    }\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <DataCard name={'Temperature'} dataFetcher={() => this.getData('temperature')}/>\n      </React.Fragment>\n     );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}